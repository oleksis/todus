name: CI

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]
        poetry-version: [1.1.7]
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Run image
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: ${{ matrix.poetry-version }}
    - name: Install dependencies
      run: poetry install
    - name: Check code with black
      run: |
        make format-check
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        make lint
    - name: Test with pytest
      run: |
        make test
  build_sdist_wheel:
    name: SDist and Wheel
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
          python-version: '3.8'
          architecture: 'x64'
    - name: Run image
      uses: abatilo/actions-poetry@v2.0.0
      with:
        poetry-version: '1.1.7'
    - name: Install dependencies
      run: poetry install
    - name: Build SDist and Wheel
      run: poetry build
    - uses: actions/upload-artifact@v2
      with:
        path: dist/*
  pypi_publish:
    needs: [test, build_sdist_wheel]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: artifact
        path: dist
    - uses: pypa/gh-action-pypi-publish@v1.2.2
      with:
        user: __token__
        password: ${{ secrets.PYPI_PASSWORD }}
